{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nFrontLeft = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nFrontRight = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nBackLeft = Motor(Ports.PORT3, GearSetting.RATIO_18_1, False)\nBackRight = Motor(Ports.PORT4, GearSetting.RATIO_18_1, False)\ncontroller_1 = Controller(PRIMARY)\nflywheel_motor_a = Motor(Ports.PORT5, GearSetting.RATIO_6_1, False)\nflywheel_motor_b = Motor(Ports.PORT6, GearSetting.RATIO_6_1, False)\nflywheel = MotorGroup(flywheel_motor_a, flywheel_motor_b)\nintake = Motor(Ports.PORT7, GearSetting.RATIO_6_1, False)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:\n#\tAuthor:\n#\tCreated:\n#\tConfiguration:\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\n\ndef pre_autonomous(): #anything before the match starts\n    # actions to do when the program starts\n    brain.screen.clear_screen()\n    brain.screen.print(\"pre auton code\")\n    wait(1, SECONDS)\n\ndef autonomous(): #without human control\n    brain.screen.clear_screen()\n    brain.screen.print(\"autonomous code\")\n    # place automonous code here\n\ndef user_control(): #user control\n    brain.screen.clear_screen()\n    # place driver control in this while loop\n    while True:\n        wait(20, MSEC)\n        #X-Drive\n        FrontLeft.spin(FORWARD,controller_1.axis3.position()-controller_1.axis4.position()+controller_1.axis1.position(),PERCENT)\n        FrontRight.spin(FORWARD,controller_1.axis1.position()-controller_1.axis3.position()-controller_1.axis4.position(),PERCENT)\n        BackLeft.spin(FORWARD,controller_1.axis3.position()+controller_1.axis4.position()+controller_1.axis1.position(),PERCENT)\n        BackRight.spin(FORWARD,controller_1.axis1.position()-controller_1.axis3.position()+controller_1.axis4.position(),PERCENT)\n        FrontLeft.set_stopping(BRAKE)\n        FrontRight.set_stopping(BRAKE)\n        BackLeft.set_stopping(BRAKE)\n        BackRight.set_stopping(BRAKE)\n        #flywheel\n        if (controller_1.buttonX.pressing()):\n            flywheel.spin(FORWARD,100,PERCENT)\n        if (controller_1.buttonA.pressing()):\n            flywheel.spin(FORWARD,50,PERCENT)\n        if (controller_1.buttonB.pressing()):\n            flywheel.spin(FORWARD,0,PERCENT)\n        #intake\n        if (controller_1.buttonR1.pressing()):\n            intake.spin(FORWARD,100,PERCENT) #out\n        elif (controller_1.buttonR2.pressing()):\n            intake.spin(FORWARD,-100,PERCENT) #in\n        else:\n            intake.spin(FORWARD,0,PERCENT)\n# create competition instance\ncomp = Competition(user_control, autonomous)\npre_autonomous()\n","textLanguage":"python","rconfig":[{"port":[1],"name":"FrontLeft","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[2],"name":"FrontRight","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[3],"name":"BackLeft","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[4],"name":"BackRight","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"}},{"port":[5,6],"name":"flywheel","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio6_1","motor_a_reversed":"false","motor_b_reversed":"false"}},{"port":[7],"name":"intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"}}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}